Assumes you have:
- Docker
- A list of documents which you want to include in the search index
- Created a telegram bot using @botfather
- An API account with Openai
- Installed python reqirements from requirements.txt

1. Create file configsecrets.py with the following secrets:

```
mongoConnection = {"login":"root","password":"root","host":"localhost","port":27017,"appName":"<appname>","db":"db","collection":"collection" }
telegram_apitoken = "<telegram bot token>"
openai_apikey = "<API key for Openai>"
```
If you're using MongoDB Atlass or another mongo instance, change connection info as appropriate.

2. Create MongoDB docker instance (if you don't already have your own mongo)

```
docker run --name <container_name>  \
-p 27017:27017 \
-v <volumn name>:/data/db \
-e MONGO_INITDB_ROOT_USERNAME=root \
-e MONGO_INITDB_ROOT_PASSWORD=root \
mongo
```

3. Add the desired text to MongoDB. The only requirement is that each Mongo document should have a field "text", which contains the text that you want to index, and should not include the field "embedding". 

- You can create a dump using something like  `docker exec <container_name> sh -c 'mongodump --authenticationDatabase admin -u root -p root --db <container_name> --archive' > db.dump`

- You can load from a dump using something similar with the mongorestore command: `docker exec -i <container_name> sh -c 'mongorestore --authenticationDatabase admin -u root -p root --db <container_name> --archive' < db.dump`

4. Once the desired text is added to mongo, run `python build_index.py` to create and save an index

5. Assuming all the previous steps went correctly, run `python bot.py` and start chatting with your telegram bot

When you send a message to the bot, the following should happen:
- The text embedding for the message sent to the bot is retrieved
- Query embedding is searched against the index to find the most similar documents
- Similar documents are concatentated with the query to create a promnt to send to GPT
- Prompt response is returned as an answer to the bot user
